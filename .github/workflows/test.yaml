name: Testing taskiq-asyncpg

on: pull_request

jobs:
  lint:
    strategy:
      matrix:
        cmd:
          - black
          - ruff
          - mypy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true

      - name: Install deps
        run: uv sync

      - name: Cache pre-commit
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9  # v4.0.2
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run lint check
        run: uv run pre-commit run -a ${{ matrix.cmd }}

  pytest:
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4

      - name: Set up PostgreSQL
        uses: ikalnytskyi/action-setup-postgres@v4
        with:
          username: postgres
          password: postgres
          database: taskiqasyncpg
        id: postgres

      - uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true
          cache-suffix: ${{ matrix.python-version }}

      - name: 'Pin python-version ${{ matrix.python-version }}'
        run: |
            uv python pin ${{ matrix.python-version }}

      - name: Install dependencies
        if: steps.setup-uv.outputs.cache-hit == 'true'
        run: |
          uv sync --frozen

      - name: 'Run pytest check'
        run: uv run pytest -vv -n auto --cov="taskiq_asyncpg" .

      - name: Generate report
        run: uv run coverage xml

      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
        if: matrix.python-version  == '3.9'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
