name: Release python package

on:
  push:
    tags:
      - "*"

jobs:
  release-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true

      - name: Install dependencies
        if: steps.setup-uv.outputs.cache-hit == 'true'
        run: |
          uv sync --frozen

      - name: Build package
        run: uv build --sdist --out-dir "dist" --verify-hashes

      - name: "Set version"
        run: |
          version="${{ (inputs.plan != '' && fromJson(inputs.plan).announcement_tag) || inputs.ref }}"
          # if version is missing, use 'latest'
          if [ -z "$version" ]; then
            echo "Using 'latest' as version"
            version="latest"
          fi

          echo "version=$version" >> $GITHUB_ENV

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: "taskiq-asyncpg-v${{ env.version }}"
          path: dist/

      - uses: actions/download-artifact@v4
        with:
          pattern: taskiq-asyncpg-v*
          path: dist
          merge-multiple: true

      - name: Publish to PyPi
        run: uv publish -v dist/*
